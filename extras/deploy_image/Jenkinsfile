GITHUB_BRANCH = '${env.IMAGE_NAME}'
node{
  def remote = [:]
  remote.name = 'simple_webapp_server'
  remote.host = '3.0.154.82'
  remote.allowAnyHosts = true

  stage ("Listing Images") {
    sh '''
        export PATH=/usr/bin:$PATH
        curl -g 'https://registry.hub.docker.com/v2/repositories/kokigit/repo/tags/' |jq '."results"[]["name"]'> image_tags.txt
    '''
  }
  stage('Choose Image') {
    liste = readFile 'image_tags.txt'
    echo "please click on the link here to chose a image to deploy"
    env.SELECTED_IMAGE = input message: 'Please choose a image to deploy ', ok: 'Validate!',
    parameters: [choice(name: 'IMAGE_NAME', choices: "${liste}", description: 'Image to deploy?')]
  }
  stage('Deploy image') {
    echo "${env.SELECTED_IMAGE}"
    withCredentials([sshUserPrivateKey(credentialsId: 'web-app-ssh', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
        remote.user = userName
        remote.identityFile = identity
        stage("Run Container") {
            writeFile file: '.env', text: "RELEASE_TAG=${SELECTED_IMAGE}"
            // sshCommand remote: remote, command: "cat .env"
            sshCommand remote: remote, command: "echo ${SELECTED_IMAGE}"
            sshCommand remote: remote, command: '''
              if ! [ -x "$(command -v docker)" ]; then
                sudo yum update -y
                sudo yum install -y git
                sudo yum install -y docker
                sudo service docker start
                sudo usermod -a -G docker ec2-user
              fi
              if ! [ -x "$(command -v docker-compose)" ]; then
                sudo curl -L "https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
              fi
              if cd devops-assiginment-3; then 
              git pull
              else 
              git clone https://github.com/kokigit/devops-assiginment-3.git
              cd devops-assiginment-3
              fi
              ls -la
              if [[ $(docker ps -aq) ]]; then
                docker stop $(docker ps -aq)
                docker rm $(docker ps -aq)
              fi
            '''
            sshCommand remote: remote, command: "cd devops-assiginment-3 && RELEASE_TAG=${SELECTED_IMAGE} docker-compose up -d"
        }
    }
  }
}